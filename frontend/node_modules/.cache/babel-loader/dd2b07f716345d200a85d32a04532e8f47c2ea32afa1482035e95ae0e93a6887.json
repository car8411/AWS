{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\car84\\\\MYAWS\\\\frontend\\\\src\\\\components\\\\UploadForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadForm = () => {\n  _s();\n  const [id, setId] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [file, setFile] = useState(null); // 파일 상태 추가\n  const [filePath, setFilePath] = useState(\"\"); // 업로드된 파일 경로\n\n  // 데이터 및 파일 서버에 전송\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // FormData 객체를 사용하여 파일과 텍스트 데이터 함께 전송\n    const formData = new FormData();\n    formData.append(\"id\", id);\n    formData.append(\"name\", name);\n    if (file) {\n      formData.append(\"file\", file); // 파일 추가\n    }\n    try {\n      // 파일과 데이터를 서버에 전송 (파일 업로드 경로)\n      const response = await axios.post(\"/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      setFilePath(response.data.filePath); // 서버에서 업로드된 파일 경로 받기\n\n      // DynamoDB에 텍스트 데이터 저장 (별도의 API 요청)\n      await axios.post(\"/save-data\", {\n        id,\n        name\n      });\n      alert(\"Data and file uploaded successfully!\");\n    } catch (error) {\n      console.error(\"Error uploading data and file:\", error);\n      alert(\"Failed to upload data and file.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: id,\n          onChange: e => setId(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"File:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: e => setFile(e.target.files[0]) // 파일 선택 시 상태에 저장\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), filePath && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Uploaded File:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: filePath,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"View Uploaded File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadForm, \"g387Ty+iA3wTjlAbYV7n7aE+JVs=\");\n_c = UploadForm;\nexport default UploadForm;\nvar _c;\n$RefreshReg$(_c, \"UploadForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","UploadForm","_s","id","setId","name","setName","file","setFile","filePath","setFilePath","handleSubmit","e","preventDefault","formData","FormData","append","response","post","headers","data","alert","error","console","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","required","files","href","rel","_c","$RefreshReg$"],"sources":["C:/Users/car84/MYAWS/frontend/src/components/UploadForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst UploadForm = () => {\r\n  const [id, setId] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [file, setFile] = useState(null); // 파일 상태 추가\r\n  const [filePath, setFilePath] = useState(\"\"); // 업로드된 파일 경로\r\n\r\n  // 데이터 및 파일 서버에 전송\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // FormData 객체를 사용하여 파일과 텍스트 데이터 함께 전송\r\n    const formData = new FormData();\r\n    formData.append(\"id\", id);\r\n    formData.append(\"name\", name);\r\n    if (file) {\r\n      formData.append(\"file\", file); // 파일 추가\r\n    }\r\n\r\n    try {\r\n      // 파일과 데이터를 서버에 전송 (파일 업로드 경로)\r\n      const response = await axios.post(\"/upload\", formData, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      });\r\n      \r\n      setFilePath(response.data.filePath); // 서버에서 업로드된 파일 경로 받기\r\n\r\n      // DynamoDB에 텍스트 데이터 저장 (별도의 API 요청)\r\n      await axios.post(\"/save-data\", { id, name });\r\n\r\n      alert(\"Data and file uploaded successfully!\");\r\n    } catch (error) {\r\n      console.error(\"Error uploading data and file:\", error);\r\n      alert(\"Failed to upload data and file.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label>ID:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={id}\r\n            onChange={(e) => setId(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Name:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>File:</label>\r\n          <input\r\n            type=\"file\"\r\n            onChange={(e) => setFile(e.target.files[0])} // 파일 선택 시 상태에 저장\r\n          />\r\n        </div>\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n\r\n      {/* 파일이 업로드된 경우에만 경로를 보여줍니다 */}\r\n      {filePath && (\r\n        <div>\r\n          <h3>Uploaded File:</h3>\r\n          <a href={filePath} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            View Uploaded File\r\n          </a>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}